class Solution:
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        if len(gas)==0 or len(cost)==0 or (sum(gas) < sum(cost)):
            return -1
        
        balance = 0
        pos = 0
        
        for i in range(len(gas)):
            balance += gas[i] - cost[i]
            if balance < 0:
                balance = 0
                pos = (i+1)
        
        return pos
    
 Time : O(N)
 Space : O(1)
